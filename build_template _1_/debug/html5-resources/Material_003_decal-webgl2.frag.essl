#version 300 es
precision mediump float;
precision highp int;

uniform highp sampler2D gbufferD;
uniform highp mat4 invVP;
uniform highp mat4 invW;
uniform highp sampler2D ImageTexture;

in highp vec3 wnormal;
in highp vec4 wvpposition;
out highp vec4 fragColor[2];

highp vec3 getPos2(highp mat4 invVP_1, highp float depth, highp vec2 coord)
{
    highp vec4 pos = vec4((coord * 2.0) - vec2(1.0), depth, 1.0);
    pos = invVP_1 * pos;
    highp vec3 _60 = pos.xyz / vec3(pos.w);
    pos = vec4(_60.x, _60.y, _60.z, pos.w);
    return pos.xyz;
}

highp vec2 octahedronWrap(highp vec2 v)
{
    return (vec2(1.0) - abs(v.yx)) * vec2((v.x >= 0.0) ? 1.0 : (-1.0), (v.y >= 0.0) ? 1.0 : (-1.0));
}

void main()
{
    highp vec3 n = normalize(wnormal);
    highp vec2 screenPosition = wvpposition.xy / vec2(wvpposition.w);
    highp vec2 depthCoord = (screenPosition * 0.5) + vec2(0.5);
    highp float depth = (texture(gbufferD, depthCoord).x * 2.0) - 1.0;
    highp vec3 wpos = getPos2(invVP, depth, depthCoord);
    highp vec4 mpos = invW * vec4(wpos, 1.0);
    if (abs(mpos.x) > 1.0)
    {
        discard;
    }
    if (abs(mpos.y) > 1.0)
    {
        discard;
    }
    if (abs(mpos.z) > 1.0)
    {
        discard;
    }
    highp vec2 texCoord = (mpos.xy * 0.5) + vec2(0.5);
    highp vec4 ImageTexture_texread_store = texture(ImageTexture, texCoord);
    highp vec3 _154 = pow(ImageTexture_texread_store.xyz, vec3(2.2000000476837158203125));
    ImageTexture_texread_store = vec4(_154.x, _154.y, _154.z, ImageTexture_texread_store.w);
    highp vec3 ImageTexture_Color_res = ImageTexture_texread_store.xyz;
    highp float ImageTexture_Alpha_res = ImageTexture_texread_store.w;
    highp vec3 basecol = ImageTexture_Color_res;
    highp float roughness = 0.5;
    highp float metallic = 0.0;
    highp float occlusion = 1.0;
    highp float specular = 0.5;
    highp float emission = 0.0;
    highp float opacity = ImageTexture_Alpha_res - 0.00019999999494757503271102905273438;
    n /= vec3((abs(n.x) + abs(n.y)) + abs(n.z));
    highp vec2 _191;
    if (n.z >= 0.0)
    {
        _191 = n.xy;
    }
    else
    {
        _191 = octahedronWrap(n.xy);
    }
    n = vec3(_191.x, _191.y, n.z);
    fragColor[0] = vec4(n.xy, roughness, opacity);
    fragColor[1] = vec4(basecol, opacity);
}

